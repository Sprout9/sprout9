- hosts: all
  vars:
    mount_path: /data
  become: yes
  tasks:
    - name: Get Linux device name for EBS volume
      ansible.builtin.shell:
        cmd: lsblk -o PATH,SERIAL | grep {{ ebs_volume_id | replace('-', '') }} | cut -d ' ' -f 1
      register: lsblk_name

    - name: Store EBS volume device name
      ansible.builtin.set_fact:
        ebs_volume_device_name: "{{ lsblk_name.stdout }}"

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ mount_path }}"
        state: directory
        mode: '0755'

    - name: Create File System
      community.general.filesystem:
        fstype: ext4
        dev: "{{ ebs_volume_device_name }}"

    - name: Mount EBS Volume
      ansible.posix.mount:
        path: "{{ mount_path }}"
        src: "{{ ebs_volume_device_name }}"
        fstype: ext4
        state: mounted

    - name: Get Linux device UUID for EBS volume
      ansible.builtin.shell:
        cmd: lsblk -o SERIAL,UUID | grep {{ ebs_volume_id | replace('-', '') }} | cut -d ' ' -f 2
      register: lsblk_uuid

    - name: remove line not using UUID in /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        state: absent
        regexp: "^{{ ebs_volume_device_name }}"

    - name: Store EBS volume device UUID
      ansible.builtin.set_fact:
        ebs_volume_device_uuid: "{{ lsblk_uuid.stdout }}"

    - name: Add UUID to /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: "^UUID={{ ebs_volume_device_uuid }}"
        line: "UUID={{ebs_volume_device_uuid}} /data  ext4  defaults,nofail  0  2"
    
    - name: Update all packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - ca-certificates 
          - curl 
          - gnupg
        state: latest

    - name: Add signing key
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        state: present

    - name: Add repository into sources list
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce 
          - docker-ce-cli 
          - containerd.io 
          - docker-buildx-plugin 
          - docker-compose-plugin
        state: latest
        update_cache: true

    - name: Start Docker Service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Install Cron
      ansible.builtin.apt:
        name: cron
        state: latest

    - name: Start Cron Service
      ansible.builtin.service:
        name: cron
        state: started
        enabled: yes

    - name: Install Certbot
      ansible.builtin.apt:
        name: certbot
        state: latest

    # - name: Obtain a certificate from Let's Encrypt
    #   ansible.builtin.shell: |
    #     certbot certonly --standalone -d {{ domain_name }} -n --agree-tos -m {{ email_address }}
    #   args:
    #     creates: /etc/letsencrypt/live/{{ domain_name }}
    #   register: certbot_output
    #   changed_when: "'Congratulations' in certbot_output.stdout"
        



# /etc/letsencrypt/live/forms.sprout9.nl/fullchain.pem
# /etc/letsencrypt/live/forms.sprout9.nl/privkey.pem