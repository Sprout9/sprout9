- hosts: all
  vars:
    mount_path: /data
  become: yes
  tasks:
    - name: Get Linux device name for EBS volume
      ansible.builtin.shell:
        cmd: lsblk -o PATH,SERIAL | grep {{ ebs_volume_id | replace('-', '') }} | cut -d ' ' -f 1
      register: lsblk_name

    - name: Store EBS volume device name
      ansible.builtin.set_fact:
        ebs_volume_device_name: "{{ lsblk_name.stdout }}"

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ mount_path }}"
        state: directory
        mode: '0755'

    - name: Create File System
      community.general.filesystem:
        fstype: ext4
        dev: "{{ ebs_volume_device_name }}"

    - name: Mount EBS Volume
      ansible.posix.mount:
        path: "{{ mount_path }}"
        src: "{{ ebs_volume_device_name }}"
        fstype: ext4
        state: mounted

    - name: Get Linux device UUID for EBS volume
      ansible.builtin.shell:
        cmd: lsblk -o SERIAL,UUID | grep {{ ebs_volume_id | replace('-', '') }} | cut -d ' ' -f 2
      register: lsblk_uuid

    - name: remove line not using UUID in /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        state: absent
        regexp: "^{{ ebs_volume_device_name }}"

    - name: Store EBS volume device UUID
      ansible.builtin.set_fact:
        ebs_volume_device_uuid: "{{ lsblk_uuid.stdout }}"

    - name: Add UUID to /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: "^UUID={{ ebs_volume_device_uuid }}"
        line: "UUID={{ebs_volume_device_uuid}} /data  ext4  defaults  0  2"
    
    - name: Update all packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes

    # https://gist.github.com/roib20/27fde10af195cee1c1f8ac5f68be7e9b
    - name: Add Docker Module Repository
      ansible.builtin.deb822_repository:
        name: docker
        types: [deb]
        uris: "https://download.docker.com/linux/{{ ansible_distribution | lower }}"
        signed_by: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        suites: ["{{ ansible_distribution_release|lower }}"]
        state: present
        enabled: yes

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - ca-certificates 
          - curl 
          - gnupg
        state: latest

    # - name: Add signing key
    #   ansible.builtin.apt_key:
    #     url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    #     state: present

    # - name: Add repository into sources list
    #   ansible.builtin.apt_repository:
    #     repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    #     state: present
    #     filename: docker

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker
          - docker.io
          - docker-registry
        state: latest
        update_cache: true

    # - name: Start Docker Service
    #   ansible.builtin.service:
    #     name: docker
    #     state: started
    #     enabled: yes

    # - name: Install Cron
    #   ansible.builtin.apt:
    #     name: cron
    #     state: latest

    # - name: Start Cron Service
    #   ansible.builtin.service:
    #     name: cron
    #     state: started
    #     enabled: yes

    # - name: Install Certbot
    #   ansible.builtin.apt:
    #     name: certbot
    #     state: latest