name: Sprout9 Main Branch Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - '.github/workflows/**'
      - 'terraform/**'
      - 'ansible/**'
      - 'nginx/**'
      - 'docker-compose.yaml'

jobs:
  apply_terraform_changes:
    name: Update Infra Resources
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@6ac2b085ea0e6db0783c745d23963c259e0b66ee

      - name: Run Terraform
        working-directory: ./terraform
        env:
          TF_VAR_public_key: ${{ vars.ED25519_PUBLIC_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init
          terraform apply -auto-approve
          terraform output -json | jq -r .aws_eip_public_ip.value > ip.txt
          terraform output -json | jq -r .aws_ebs_volume_id.value > ebs_volume_id.txt
          
      - name: Upload IP artifact
        uses: actions/upload-artifact@v4
        with:
          name: ip-file
          path: |
            terraform/ip.txt
            terraform/ebs_volume_id.txt


  apply_ansible_changes:
    name: Update nodes
    runs-on: ubuntu-latest
    needs: apply_terraform_changes
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install ansible
        run: pip install ansible

      - name: Download IP artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Setup SSH 
        shell: bash
        run: |
          eval `ssh-agent -s`
          mkdir -p /home/runner/.ssh/
          echo -e "${{ secrets.ED25519_PRIVATE_KEY }}" > /home/runner/.ssh/id_ed25519
          chmod 700 /home/runner/.ssh/id_ed25519
          ssh-keyscan -t rsa,dsa,ecdsa,ed25519 $(cat ${GITHUB_WORKSPACE}/ip.txt) >> /home/runner/.ssh/known_hosts

      - name: Run ansible script
        shell: bash
        working-directory: ./ansible
        run: |
          service ssh status
          ansible-playbook \
            -v \
            --private-key /home/runner/.ssh/id_ed25519 \
            -u admin \
            -i ${GITHUB_WORKSPACE}/ip.txt \
            playbook.yaml \
            --extra-vars "\
              domain_name=${{ vars.DOMAIN_NAME }} \
              email_address=${{ secrets.CERTBOT_EMAIL }} \
              ebs_volume_id=$(cat ${GITHUB_WORKSPACE}/ebs_volume_id.txt) \
              user=${{ secrets.REMOTE_USER }}"


  push_nginx_to_registry:
    name: Push Nginx Docker image to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.check.conclusion }}
    needs:
      - apply_ansible_changes
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for Nginx changes
        id: check
        continue-on-error: true
        run: $(! git diff --quiet HEAD^ ./nginx)
      
      - name: Log in to Docker Hub
        if: steps.check.conclusion == 'success'
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push Docker image
        if: steps.check.conclusion == 'success'
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: sprout9/nginx:latest
          platforms:
            - linux/arm64v8



  deploy_to_instance:
    name: Deploy latest nginx version to instance Docker
    runs-on: ubuntu-latest
    needs:
      - push_nginx_to_registry
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Download IP artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Setup SSH
        shell: bash
        run: |
          eval `ssh-agent -s`
          mkdir -p /home/runner/.ssh/
          echo -e "${{ secrets.ED25519_PRIVATE_KEY }}" > /home/runner/.ssh/id_ed25519
          chmod 700 /home/runner/.ssh/id_ed25519
          ssh-keyscan -t rsa,dsa,ecdsa,ed25519 $(cat ${GITHUB_WORKSPACE}/ip.txt) >> /home/runner/.ssh/known_hosts

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Deploy
        run: |
          docker context create remote --docker "host=ssh://${{ secrets.REMOTE_USER }}@$(cat ${GITHUB_WORKSPACE}/ip.txt)"
          docker-compose --context remote --platform linux/arm64v8 pull nginx
          docker-compose --context remote --platform linux/arm64v8 up -d nginx